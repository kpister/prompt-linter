# hello-world.sub
# My HTCondor submit file

# Provide HTCondor with the name of the Docker container
# universe = vanilla
container_image = docker://djp4u1/env:latest
universe = container

# Specify the name of the log, standard error, and standard output (or "screen output") files. 
# Wherever you see $(Cluster), HTCondor will insert the queue number assigned to this set of jobs at the time of submission.
log = main_$(Cluster)_$(Process).log
error = main_$(Cluster)_$(Process).err
output = main_$(Cluster)_$(Process).out

# Specify your executable (single binary or a script that runs several
#  commands) and arguments to be passed to jobs. 
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.
executable = run.sh
arguments = $(Process)

# Transferring Files
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
transfer_input_files = hf.py, run.py, .env

# IMPORTANT! Require execute servers that can access /staging
requirements = (Target.HasCHTCStaging == true) && ((OpSysMajorVer == 8) || (OpSysMajorVer == 9))

# Tell HTCondor requirements (e.g., operating system) your job needs, 
# what amount of compute resources each job will need on the computer where it runs.
# +is_resumable = true
+WantGPULab = true
+GPUJobLength = "short"
+WantGlideIn = true	

request_cpus = 5
request_memory = 64GB
request_disk = 100GB
request_gpus = 4
require_gpus = (Capability >= 8.0) && (GlobalMemoryMb >= 40000)

# Tell HTCondor to run 1 instance of our job:
queue 1
